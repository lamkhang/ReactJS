{"version":3,"sources":["user-managerment/Search.js","user-managerment/UserItem.js","user-managerment/Users.js","user-managerment/Modal.js","user-managerment/Home.js","redux/action/index.js","redux/constants/actionType.js","user-managerment-redux/Search.js","user-managerment-redux/UserItem.js","user-managerment-redux/Users.js","user-managerment-redux/Modal.js","user-managerment-redux/Home.js","life-cycle/child.js","life-cycle/pure.js","life-cycle/life-cycle.js","form-validation/form-validation.js","App.js","serviceWorker.js","redux/reducers/userReducer.js","redux/reducers/rootReducer.js","index.js"],"names":["Search","type","className","onChange","event","props","onFilter","target","value","Component","UserItem","users","this","name","username","email","phoneNumber","data-toggle","data-target","onClick","userEdit","onDelete","id","Users","renderHTML","userList","map","item","index","key","Modal","handleOnChange","setState","handleSubmit","preventDefault","onSubmit","state","nextProps","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","aria-label","actionEditUser","user","connect","dispatch","keyWord","action","editUser","filter","toLowerCase","indexOf","userReducer","console","log","Home","handleOnFilter","onEdit","Child","Pure","PureComponent","Formvalidation","handleError","message","userNameValid","passwordValid","emailValid","length","match","error","formValidation","formValid","values","password","htmlFor","onBlur","onKeyUp","disabled","App","Boolean","window","location","hostname","initState","findIndex","splice","Math","random","rootReducer","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6f0a21d3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nclass Search extends Component {\n\n    render() {\n        return <input type=\"text\" className=\"form-control mb-3 w-50\" onChange={(event) => this.props.onFilter(event.target.value)}/>;\n    }\n}\n\nexport default Search;\n","import React, { Component } from \"react\";\n\nclass UserItem extends Component {\n\n    render() {\n        let { users } = this.props\n        return (\n            <tr>\n                <td>{users.name}</td>\n                <td>{users.username}</td>\n                <td>{users.email}</td>\n                <td>{users.phoneNumber}</td>\n                <td>{users.type}</td>\n                <td>\n                    <button\n                        className=\"btn btn-info mr-2\"\n                        data-toggle=\"modal\"\n                        data-target=\"#modelIdUser\"\n                        onClick={() => {this.props.userEdit(users)}}\n                    >\n                        Edit\n          </button>\n                    <button className=\"btn btn-danger\" onClick={() => {this.props.onDelete(users.id)}}>Delete</button>\n                </td>\n            </tr>\n        );\n    }\n}\n\nexport default UserItem;\n","import React, { Component } from \"react\";\nimport UserItem from \"./UserItem\";\n\nclass Users extends Component {\n    renderHTML = () => {\n        return this.props.userList.map((item, index) => {\n            return <UserItem key={index} users={item}\n             userEdit={this.props.userEdit}/>\n        })\n    }\n    render() {\n\n        return (\n            <div>\n                <table className=\"table\">\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Username</th>\n                            <th>Email</th>\n                            <th>Phone Number</th>\n                            <th>Type</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.renderHTML()}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default Users;\n","import React, { Component } from \"react\";\nclass Modal extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            username: \"\",\n            name: \"\",\n            email: \"\",\n            phoneNumber:\"\",\n            type: \"USER\",\n            id: \"\"\n        };\n    }\n    componentWillReceiveProps(nextProps){\n        if(nextProps && nextProps.userEdit){\n            // EDIT\n            this.setState({\n                username: nextProps.userEdit.username,\n                name: nextProps.userEdit.name,\n                email: nextProps.userEdit.email,\n                phoneNumber: nextProps.userEdit.phoneNumber,\n                type: nextProps.userEdit.type,\n                id: nextProps.userEdit.id\n            })\n        }\n        else{\n            // ADD\n            this.setState({\n                username: \"\",\n                name: \"\",\n                email: \"\",\n                phoneNumber:\"\",\n                type: \"USER\",\n                id: \"\"\n            })\n        }\n    }\n    handleOnChange = event => {\n        let target = event.target;\n        let name = target.name;\n        let value = target.value;\n        this.setState({\n            [name]: value\n        })\n    }\n    handleSubmit = (event) => {\n        event.preventDefault(); // ko load lai trang khi\n        this.props.onSubmit(this.state);\n    }\n    render() {\n        return (\n            <div\n                className=\"modal fade\"\n                id=\"modelIdUser\"\n                tabIndex={-1}\n                role=\"dialog\"\n                aria-labelledby=\"modelTitleId\"\n                aria-hidden=\"true\"\n            >\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title\">{this.props.userEdit ? \"Edit User\" : \"Add User\"}</h5>\n                            <button\n                                type=\"button\"\n                                className=\"close\"\n                                data-dismiss=\"modal\"\n                                aria-label=\"Close\"\n                            >\n                                <span aria-hidden=\"true\">×</span>\n                            </button>\n                        </div>\n                        <div className=\"modal-body\">\n                            <form onSubmit={this.handleSubmit}>\n                                <div className=\"form-group\">\n                                    <label>Username</label>\n                                    <input type=\"text\" className=\"form-control\" name=\"username\" onChange={this.handleOnChange} value={this.state.username}/>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Name</label>\n                                    <input type=\"text\" className=\"form-control\" name=\"name\" onChange={this.handleOnChange} value={this.state.name}/>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Email</label>\n                                    <input type=\"text\" className=\"form-control\" name=\"email\" onChange={this.handleOnChange} value={this.state.email}/>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Phone Number</label>\n                                    <input type=\"text\" className=\"form-control\" name=\"phoneNumber\" onChange={this.handleOnChange} value={this.state.phoneNumber}/>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Type</label>\n                                    <select className=\"form-control\" name=\"type\" onChange={this.handleOnChange} value={this.state.type}>\n                                        <option>USER</option>\n                                        <option>VIP</option>\n                                    </select>\n                                </div>\n                                <button type=\"submit\" className=\"btn btn-success\">\n                                    Submit\n                                </button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default  Modal;\n","import React, { Component } from \"react\";\nimport Search from \"./Search\";\nimport Users from \"./Users\";\nimport Modal from \"./Modal\";\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userList: [\n                {\n                    id: 1,\n                    name: \"Dinh Phuc Nguyen\",\n                    username: \"dpnguyen\",\n                    email: \"dpnguyen@gmail.com\",\n                    phoneNumber: \"1123123213\",\n                    type: \"VIP\"\n                },\n                {\n                    id: 2,\n                    name: \"Nguyen Dinh Phuc\",\n                    username: \"nguyendp\",\n                    email: \"nguyendp@gmail.com\",\n                    phoneNumber: \"1123123213\",\n                    type: \"VIP\"\n                }\n            ],\n            userEdit: null,\n            keyWord: \"\"\n        };\n    }\n    timVitri = (id) => {\n        return this.state.userList.findIndex(item => {\n            return item.id === id\n        })\n    }\n    // handleDelete = (id) => {\n    //     let index = this.timVitri(id);\n    //     let userList = [...this.state.userList]\n    //     if (index !== -1) {\n    //         userList.splice(index, 1);\n    //     }\n    //     this.setState({\n    //         userList\n    //     })\n    // }\n    handleOnSubmit = (user) => {\n        // let user1 = { ...user };\n        if(user.id === \"\"){\n            // Add\n            user.id = Math.random();\n            let userList = [...this.state.userList, user]; //copy thanh mang moi\n            this.setState({\n                userList\n            })\n        }\n        else{\n            // Edit\n            let index = this.timVitri(user.id);\n            let userList = [...this.state.userList];\n            if(index !== -1){\n                userList[index] = user;\n            }\n            this.setState({\n                userList,\n                userEdit: user\n            })\n        }\n\n    }\n    handleUserEdit = (user) => {\n        this.setState({\n            userEdit: user\n        })\n    }\n    handleOnFilter = (keyWord)=>{\n        this.setState({\n            keyWord\n        })\n\n    }\n    render() {\n        let { userList } = this.state;\n        userList = userList.filter(item => {\n            return item.name.toLowerCase().indexOf(this.state.keyWord.toLowerCase()) !== -1;\n        })\n\n        return (\n            <div className=\"container\">\n                <h1 className=\"display-4 text-center my-3\">User Management</h1>\n                <div className=\"d-flex justify-content-between align-items-center\">\n                    <Search onFilter={this.handleOnFilter}/>\n                    <button\n                        className=\"btn btn-success\"\n                        data-toggle=\"modal\"\n                        data-target=\"#modelIdUser\"\n                        onClick={() => {\n                            this.setState({\n                                userEdit: null\n                            })\n                        }}\n                    >\n                        Add User\n          </button>\n                </div>\n                <Users userList={userList} userEdit={this.handleUserEdit} />\n                <Modal onSubmit={this.handleOnSubmit} userEdit={this.state.userEdit} />\n            </div>\n        );\n    }\n}\n\nexport default Home;\n","import * as ActionType from \"./../constants/actionType\";\r\nexport const actionOnDelete = id =>{\r\n    return {\r\n        type: ActionType.DELETE_USER,\r\n        id\r\n    }\r\n};\r\nexport const actionEditUser = user =>{\r\n    return {\r\n        type: ActionType.EDIT_USER,\r\n        user\r\n    }\r\n}\r\nexport const actionSaveUser = user =>{\r\n    return{\r\n        type: ActionType.SAVE_USER,\r\n        user\r\n    }\r\n}\r\nexport const actionFilter = keyWord =>{\r\n    return{\r\n        type: ActionType.FILTER,\r\n        keyWord\r\n    }\r\n}","export const DELETE_USER = \"DELETE USER\";\r\nexport const EDIT_USER = \"EDIT USER\";\r\nexport const SAVE_USER = \"SAVE USER\";\r\nexport const FILTER = \"FILTER\";","import React, { Component } from \"react\";\nimport {connect} from \"react-redux\";\nimport * as action from \"./../redux/action/index\";\nclass Search extends Component {\n\n    render() {\n        return <input type=\"text\" className=\"form-control mb-3 w-50\" onChange={(event) => this.props.onFilter(event.target.value)}/>;\n    }\n}\n\nconst mapDispatchToProps = dispatch =>{\n    return {\n        onFilter: keyWord=>{\n            /*\n            let action = {\n                type: \"FILTER\",\n                keyWord\n            }\n            */\n            dispatch(action.actionFilter(keyWord))\n        }\n    }\n}\nexport default connect(null, mapDispatchToProps) (Search);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as action from \"./../redux/action/index\";\nclass UserItem extends Component {\n\n    render() {\n        let { users } = this.props\n        return (\n            <tr>\n                <td>{users.name}</td>\n                <td>{users.username}</td>\n                <td>{users.email}</td>\n                <td>{users.phoneNumber}</td>\n                <td>{users.type}</td>\n                <td>\n                    <button\n                        className=\"btn btn-info mr-2\"\n                        data-toggle=\"modal\"\n                        data-target=\"#modelIdUserRedux\"\n                        onClick={() => {this.props.editUser(users)}}\n                    >\n                        Edit\n          </button>\n                    <button className=\"btn btn-danger\" onClick={() => {this.props.onDelete(users.id)}}>Delete</button>\n                </td>\n            </tr>\n        );\n    }\n}\nconst mapDispatchToProps = dispatch =>{\n    return{\n        // value cua props là 1 hàm\n        onDelete: id =>{\n            /*\n            let action = {\n                type: \"DELETE USER\",\n                id\n            }\n            */\n            dispatch(action.actionOnDelete(id));\n        },\n        editUser: user=>{\n            /*\n            let action ={\n                type: \"EDIT USER\",\n                user\n            }\n            */\n            dispatch(action.actionEditUser(user));\n        }\n    }\n}\nexport default connect(\n    null, // tham so mapStateToProps\n    mapDispatchToProps)\n    (UserItem);\n","import React, { Component } from \"react\";\nimport UserItem from \"./UserItem\";\nimport { connect } from \"react-redux\";\n\nclass Users extends Component {\n    renderHTML = () => {\n        let { userList, keyWord } = this.props;\n        userList = userList.filter(item =>{\n            return item.name.toLowerCase().indexOf(keyWord.toLowerCase()) !== -1;\n        })\n        return userList.map((item, index) => {\n            return <UserItem key={index} users={item}\n            onDelete={this.props.onDelete}/>\n        })\n    }\n    render() {\n\n        return (\n            <div>\n                <table className=\"table\">\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Username</th>\n                            <th>Email</th>\n                            <th>Phone Number</th>\n                            <th>Type</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.renderHTML()}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n\n}\nconst mapStateToProps = state =>{\n    return{\n        userList: state.userReducer.userList,\n        keyWord: state.userReducer.keyWord\n    }\n}\nexport default connect(mapStateToProps, null) (Users);\n","import React, { Component } from \"react\";\nimport {connect} from \"react-redux\";\nimport * as action from \"./../redux/action/index\";\nclass Modal extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            username: \"\",\n            name: \"\",\n            email: \"\",\n            phoneNumber:\"\",\n            type: \"USER\",\n            id: \"\"\n        };\n    }\n    componentWillReceiveProps(nextProps){\n        // show modal when click edit user\n        console.log('modal redux', nextProps);\n\n        if(nextProps && nextProps.userEdit){\n            // EDIT\n            this.setState({\n                username: nextProps.userEdit.username,\n                name: nextProps.userEdit.name,\n                email: nextProps.userEdit.email,\n                phoneNumber: nextProps.userEdit.phoneNumber,\n                type: nextProps.userEdit.type,\n                id: nextProps.userEdit.id\n            })\n        }\n        else{\n            // ADD\n            this.setState({\n                username: \"\",\n                name: \"\",\n                email: \"\",\n                phoneNumber:\"\",\n                type: \"USER\",\n                id: \"\"\n            })\n        }\n    }\n    handleOnChange = event => {\n        let target = event.target;\n        let name = target.name;\n        let value = target.value;\n        this.setState({\n            [name]: value\n        })\n    }\n    handleSubmit = (event) => {\n        event.preventDefault(); // ko load lai trang khi\n        this.props.onSubmit(this.state);\n    }\n    render() {\n        return (\n            <div\n                className=\"modal fade\"\n                id=\"modelIdUserRedux\"\n                tabIndex={-1}\n                role=\"dialog\"\n                aria-labelledby=\"modelTitleId\"\n                aria-hidden=\"true\"\n            >\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title\">{this.props.userEdit ? \"Edit User\" : \"Add User\"}</h5>\n                            <button\n                                type=\"button\"\n                                className=\"close\"\n                                data-dismiss=\"modal\"\n                                aria-label=\"Close\"\n                            >\n                                <span aria-hidden=\"true\">×</span>\n                            </button>\n                        </div>\n                        <div className=\"modal-body\">\n                            <form onSubmit={this.handleSubmit}>\n                                <div className=\"form-group\">\n                                    <label>Username</label>\n                                    <input type=\"text\" className=\"form-control\" name=\"username\" onChange={this.handleOnChange} value={this.state.username}/>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Name</label>\n                                    <input type=\"text\" className=\"form-control\" name=\"name\" onChange={this.handleOnChange} value={this.state.name}/>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Email</label>\n                                    <input type=\"text\" className=\"form-control\" name=\"email\" onChange={this.handleOnChange} value={this.state.email}/>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Phone Number</label>\n                                    <input type=\"text\" className=\"form-control\" name=\"phoneNumber\" onChange={this.handleOnChange} value={this.state.phoneNumber}/>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Type</label>\n                                    <select className=\"form-control\" name=\"type\" onChange={this.handleOnChange} value={this.state.type}>\n                                        <option>USER</option>\n                                        <option>VIP</option>\n                                    </select>\n                                </div>\n                                <button type=\"submit\" className=\"btn btn-success\">\n                                    Submit\n                                </button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nconst mapDispatchToProps = dispatch =>{\n    return {\n        onSubmit: (user) =>{\n            dispatch(action.actionSaveUser(user))\n        }\n    }\n}\nconst mapStateToProps = state=>{\n    return{\n        // key is props\n        userEdit: state.userReducer.userEdit\n\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (Modal);\n\n","import React, { Component } from \"react\";\nimport Search from \"./Search\";\nimport Users from \"./Users\";\nimport Modal from \"./Modal\";\nimport {connect} from \"react-redux\";\nimport * as action from \"./../redux/action/index\";\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userList: [\n                {\n                    id: 1,\n                    name: \"Dinh Phuc Nguyen\",\n                    username: \"dpnguyen\",\n                    email: \"dpnguyen@gmail.com\",\n                    phoneNumber: \"1123123213\",\n                    type: \"VIP\"\n                },\n                {\n                    id: 2,\n                    name: \"Nguyen Dinh Phuc\",\n                    username: \"nguyendp\",\n                    email: \"nguyendp@gmail.com\",\n                    phoneNumber: \"1123123213\",\n                    type: \"VIP\"\n                }\n            ],\n            userEdit: null,\n            keyWord: \"\"\n        };\n    }\n\n    render() {\n        let { userList } = this.state;\n        userList = userList.filter(item => {\n\n            return item.name.toLowerCase().indexOf(this.state.keyWord.toLowerCase()) !== -1;\n        })\n\n        return (\n            <div className=\"container\">\n                <h1 className=\"display-4 text-center my-3\">User Management Redux</h1>\n                <div className=\"d-flex justify-content-between align-items-center\">\n                    <Search onFilter={this.handleOnFilter}/>\n                    <button\n                        className=\"btn btn-success\"\n                        data-toggle=\"modal\"\n                        data-target=\"#modelIdUserRedux\"\n                        onClick={() => {\n                            this.props.onEdit()\n                        }}\n                    >\n                        Add User\n          </button>\n                </div>\n                <Users/>\n                <Modal userEdit={this.state.userEdit} />\n            </div>\n        );\n    }\n}\nconst mapDispatchToProps = dispatch =>{\n    return{\n        onEdit: () =>{\n            /*\n            let action ={\n                type: \"EDIT USER\",\n                user: null\n            }\n            */\n            dispatch(action.actionEditUser(null));\n        }\n    }\n}\n\nexport default connect(null, mapDispatchToProps) (Home);\n","import React, { Component } from 'react';\r\n\r\nclass Child extends Component {\r\n    componentDidMount(){\r\n        console.log(\"componentDidMount Child\");\r\n    }\r\n    componentWillReceiveProps(nextProps){\r\n        console.log(nextProps);\r\n\r\n        console.log(\"componentWillReceiveProps Child\");\r\n    }\r\n    render() {\r\n        console.log(\"render Child\");\r\n\r\n        return (\r\n            <div >\r\n                {this.props.username}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Child;","import React, { Component, PureComponent } from 'react';\r\n\r\nclass Pure extends PureComponent {\r\n    render() {\r\n        console.log(\"render Pure\");\r\n\r\n        return (\r\n            <div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Pure;","import React, { Component } from 'react';\r\nimport Child from \"./child\";\r\nimport Pure from \"./pure\";\r\nclass LifeCycle extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        console.log(\"constructor\");\r\n        this.state = {\r\n            username: \"Nguyen\"\r\n        }\r\n    }\r\n    componentWillMount(){\r\n        console.log(\"componentWillMount\");\r\n\r\n    }\r\n    // componentDidMount chỉ chạy 1 lần duy nhất khi mới load trang\r\n    componentDidMount(){\r\n        console.log(\"componentDidMount\");\r\n\r\n    }\r\n    componentDidUpdate(){\r\n        console.log(\"componentDidUpdate\");\r\n\r\n    }\r\n    shouldComponentUpdate(nextProps, nextState){\r\n        console.log(nextProps);\r\n        console.log(nextState);\r\n        if(nextState.username === \"Phuc Nguyen\")\r\n            return true;\r\n\r\n    }\r\n    componentWillReceiveProps(nextProps){\r\n        console.log(\"componentWillReceiveProps\");\r\n\r\n    }\r\n    render() {\r\n        console.log(\"render\");\r\n        return (\r\n            <div>\r\n                Life Cycle\r\n                <button className=\"btn btn-success\" onClick={() => {this.setState({\r\n                    username: \"Phuc Nguyen\"\r\n                })}}>Set state</button>\r\n                <h3>user name: {this.state.username}</h3>\r\n                <Child username={this.state.username}/>\r\n                <Pure />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LifeCycle;","import React, { Component } from \"react\";\r\n\r\nexport default class Formvalidation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      values: {\r\n        username: \"\",\r\n        password: \"\",\r\n        email: \"\"\r\n      },\r\n      error:{\r\n        username: \"\",\r\n        password: \"\",\r\n        email: \"\"\r\n      },\r\n      formValid: false,\r\n      userNameValid: false,\r\n      passwordValid: false,\r\n      emailValid: false\r\n    }\r\n  }\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n  }\r\n  handleOnChange = event =>{\r\n    // let target = event.target;\r\n    // let name = target.name;\r\n    // let value = target.value;\r\n    let {name, value} = event.target;\r\n    this.setState({\r\n      value:{...this.state.value, [name]: value}\r\n    })\r\n  }\r\n  // handleOk(){\r\n  //   console.log(\"ok\");\r\n  // }\r\n  handleError = event =>{\r\n    let {name, value} = event.target;\r\n    let message = value === \"\" ? name + \" khong duoc rong\" : \"\";\r\n    let {userNameValid, passwordValid, emailValid} = this.state;\r\n    switch (name) {\r\n      case \"username\":\r\n        userNameValid = message !== \"\" ? false : true;\r\n        console.log(value.length);\r\n\r\n        if( value !== \"\" && value.length < 4){\r\n          message = 'Vui long nhap lon hon 4 ki tu';\r\n          console.log(message);\r\n          userNameValid = false;\r\n        }\r\n        break;\r\n      case \"password\":\r\n        passwordValid = message !== \"\" ? false : true;\r\n        break\r\n      case \"email\":\r\n        emailValid = message !== \"\" ? false: true;\r\n        if(value !== \"\" && !value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i)){\r\n          message = \"email khong hop le\";\r\n          emailValid = false;\r\n        };\r\n        break\r\n      default:\r\n        break;\r\n    }\r\n    console.log(userNameValid, passwordValid, emailValid);\r\n    this.setState({\r\n      error:{\r\n        ...this.state.error, [name]: message,\r\n      },\r\n        userNameValid,\r\n        passwordValid,\r\n        emailValid\r\n\r\n    },() => console.log(this.state.error))\r\n  }\r\n  formValidation = ()=>{\r\n\r\n\r\n    this.setState({\r\n      formValid : this.state.userNameValid && this.state.passwordValid && this.state.emailValid\r\n    })\r\n\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-6 mx-auto\">\r\n            <h3>Form Validation</h3>\r\n            <form onSubmit={this.handleSubmit}>\r\n              <div className=\"form-group\">\r\n                <label htmlFor>Username</label>\r\n                <input type=\"text\" className=\"form-control\" name=\"username\" onChange={this.handleOnChange} onBlur={this.handleError} onKeyUp={this.handleError}/>\r\n                {console.log(this.state.error.username !== \"\")}\r\n                {this.state.error.username !== \"\" ? <div className=\"alert alert-danger\">{this.state.error.username}</div>: \"\"}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor>Password</label>\r\n                <input type=\"text\" className=\"form-control\" name=\"password\" onChange={this.handleOnChange} onBlur={this.handleError} onKeyUp={this.handleError}\r\n                 />\r\n                 {this.state.error.password !== \"\" ? <div className=\"alert alert-danger\">{this.state.error.password}</div>: \"\"}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor>Email</label>\r\n                <input type=\"email\" className=\"form-control\" name=\"email\" onChange={this.handleOnChange} onBlur={this.handleError} onKeyUp={this.handleError}/>\r\n                {this.state.error.email !== \"\" ? <div className=\"alert alert-danger\">{this.state.error.email}</div>: \"\"}\r\n              </div>\r\n              <button type=\"submit\" className=\"btn btn-success\" disabled={!this.state.formValid}>\r\n                Submit\r\n              </button>\r\n            </form>\r\n\r\n            {/* <button type=\"submit\" className=\"btn btn-primary mt5\" onClick={this.handleOk}>\r\n                ook\r\n              </button> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\nimport './App.css';\n// import BaiTap1 from \"./components/BaiTap1/baitap1\";\n// import {BaiTap2} from \"./components/BaiTap2/baitap2\";\n// import BaiTap3 from \"./components/BaiTap3/baitap3\";\n// import RenderingElements from \"./rendering-elements/rendering-elements\";\n// import HandlingEvents from \"./handling-events/handling-event\";\n// import ExampleEvent from \"./handling-events/example-event\";\n// import State from \"./handling-events/state\";\n// import BaiTapCar from \"./handling-events/baitap-car\";\n// import ListKeys from \"./list-keys/list-keys\";\n// import LiftingStateUpCart from \"./lifting-state-up-cart/lifting-state-up-cart\"\nimport Home from \"./user-managerment/Home\";\nimport HomeRedux from \"./user-managerment-redux/Home\";\nimport LifeCycle from \"./life-cycle/life-cycle\";\nimport FormValidation from \"./form-validation/form-validation\";\nfunction App() {\n    return (\n        <div>\n            {/* <BaiTap1 /> */}\n            {/* <BaiTap2 /> */}\n            {/* <BaiTap3 /> */}\n            {/* <RenderingElements /> */}\n            {/* <HandlingEvents /> */}\n            {/* <ExampleEvent /> */}\n            {/* <State /> */}\n            {/* <BaiTapCar /> */}\n            {/* <ListKeys /> */}\n            {/* <LiftingStateUpCart /> */}\n            {/* <Home />\n            <HomeRedux />\n            <LifeCycle /> */}\n            <FormValidation />\n        </div>\n\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as ActionType from \"./../constants/actionType\";\r\n\r\nlet initState = {\r\n    userList: [\r\n        {\r\n            id: 1,\r\n            name: \"Dinh Phuc Nguyen\",\r\n            username: \"dpnguyen\",\r\n            email: \"dpnguyen@gmail.com\",\r\n            phoneNumber: \"1123123213\",\r\n            type: \"VIP\"\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Nguyen Dinh Phuc\",\r\n            username: \"nguyendp\",\r\n            email: \"nguyendp@gmail.com\",\r\n            phoneNumber: \"1123123213\",\r\n            type: \"VIP\"\r\n        }\r\n    ],\r\n    userEdit: null,\r\n    keyWord: \"\"\r\n}\r\n// const timVitri = (id) => {\r\n//     return this.initState.userList.findIndex(item => {\r\n//         return item.id === id\r\n//     })\r\n// }\r\nconst userReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case ActionType.DELETE_USER:\r\n            let userList = [...state.userList];\r\n            let index = userList.findIndex(item => {\r\n                return item.id === action.id\r\n            })\r\n            userList.splice(index, 1);\r\n            state.userList = userList;\r\n            return { ...state };\r\n\r\n        case ActionType.SAVE_USER:\r\n            if (action.user.id) {\r\n                // UPDATE\r\n                let userList = [...state.userList];\r\n                let index = userList.findIndex((item) => {\r\n                    return action.user.id === item.id;\r\n                });\r\n                // console.log(index);\r\n\r\n                if (index !== -1) {\r\n                    // state.userList[index] = action.user;\r\n                    userList[index] = action.user;\r\n                    state.userList = userList;\r\n                }\r\n                //         let userList = [...this.state.userList];\r\n                //         if(index !== -1){\r\n                //             userList[index] = user;\r\n                //         }\r\n            }\r\n            else {\r\n                // ADD\r\n                // let user = { ...action.user }\r\n                action.user.id = Math.random();\r\n                // state.userList = [...state.userList, user];\r\n                state.userList = [...state.userList, action.user];\r\n            }\r\n            return { ...state };\r\n\r\n        case ActionType.EDIT_USER:\r\n            state.userEdit = action.user;\r\n            return { ...state }\r\n        case \"FILTER\":\r\n\r\n            state.keyWord= action.keyWord;\r\n        default:\r\n            return { ...state };\r\n    }\r\n}\r\nexport default userReducer;","/* tong hop cac state */\r\nimport { combineReducers } from \"redux\";\r\nimport userReducer from \"./userReducer\";\r\nconst rootReducer = combineReducers({\r\n    userReducer\r\n})\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\"; // tuong tac redux vs react\nimport rootReducer from \"./redux/reducers/rootReducer\";\n\nconst store = createStore(rootReducer,  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}